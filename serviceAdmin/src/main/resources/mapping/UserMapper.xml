<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.future.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.future.entity.User">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="passkey" jdbcType="VARCHAR" property="passkey" />
    <result column="open_id" jdbcType="VARCHAR" property="openId" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="session_key" jdbcType="VARCHAR" property="sessionKey" />
    <result column="union_id" jdbcType="VARCHAR" property="unionId" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="user_type" jdbcType="TINYINT" property="userType" />
    <result column="source" jdbcType="TINYINT" property="source" />
    <result column="oper_date" jdbcType="TIMESTAMP" property="operDate" />
  </resultMap>
  <insert id="insert" parameterType="com.future.entity.User">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into user (id, username, password,
      passkey, open_id, user_id, 
      session_key, union_id, status,
    user_type, source,oper_date)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
      #{passkey,jdbcType=VARCHAR}, #{openId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, 
      #{sessionKey,jdbcType=VARCHAR}, #{unionId,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, 
      #{userType,jdbcType=TINYINT}, #{source,jdbcType=TINYINT},NOW())
  </insert>
  <insert id="insertSelective" parameterType="com.future.entity.User">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="passkey != null">
        passkey,
      </if>
      <if test="openId != null">
        open_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="sessionKey != null">
        session_key,
      </if>
      <if test="unionId != null">
        union_id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="userType != null">
        user_type,
      </if>
      <if test="source != null">
        source,
      </if>
        oper_date
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="passkey != null">
        #{passkey,jdbcType=VARCHAR},
      </if>
      <if test="openId != null">
        #{openId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="sessionKey != null">
        #{sessionKey,jdbcType=VARCHAR},
      </if>
      <if test="unionId != null">
        #{unionId,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="userType != null">
        #{userType,jdbcType=TINYINT},
      </if>
      <if test="source != null">
        #{source,jdbcType=TINYINT},
      </if>
        NOW()
    </trim>
  </insert>

  <select id="selectByCondition" parameterType="java.util.Map" resultType="com.future.entity.User">

    select
      id, username, password,
      passkey, open_id openId, user_id userId,
      session_key sessionKey, union_id unionId, status,
      user_type, source , oper_date operDate
    from
      user
    where
    <trim prefixOverrides="and">
      <if test="id != null">
        and id= #{id,jdbcType=INTEGER}
      </if>
      <if test="username != null">
        and username=#{username,jdbcType=VARCHAR}
      </if>
      <if test="passkey != null">
        and passkey=#{passkey,jdbcType=VARCHAR}
      </if>
      <if test="openId != null">
        and open_id=#{openId,jdbcType=VARCHAR}
      </if>
      <if test="userId != null">
        and user_id=#{userId,jdbcType=VARCHAR}
      </if>
      <if test="unionId != null">
        and union_id=#{unionId,jdbcType=VARCHAR}
      </if>
      <if test="status != null">
        and status=#{status,jdbcType=TINYINT}
      </if>
      <if test="userType != null">
        and user_type=#{userType,jdbcType=TINYINT}
      </if>
      <if test="source != null">
        and source=#{source,jdbcType=TINYINT}
      </if>
    </trim>
  </select>

  <update id="updateByCondition" parameterType="com.future.entity.User">
    update user
    set
    <trim suffixOverrides=",">
        oper_date=NOW(),
      <if test="username != null">
        username=#{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password=#{password,jdbcType=VARCHAR},
      </if>
      <if test="passkey != null">
        passkey=#{passkey,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id=#{userId,jdbcType=VARCHAR},
      </if>
      <if test="unionId != null">
        union_id=#{unionId,jdbcType=VARCHAR},
      </if>
      <if test="sessionKey != null">
        session_key=#{sessionKey,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status=#{status,jdbcType=TINYINT},
      </if>
      <if test="userType != null">
        user_type=#{userType,jdbcType=TINYINT},
      </if>
      <if test="source != null">
        source=#{source,jdbcType=TINYINT},
      </if>
    </trim>
    where
    <trim prefixOverrides="and">
      <if test="id != null">
        and id= #{id,jdbcType=INTEGER}
      </if>
      <if test="openId != null">
        and open_id=#{openId,jdbcType=VARCHAR}
      </if>
      <if test="userId != null">
        and user_id=#{userId,jdbcType=VARCHAR}
      </if>
      <if test="unionId != null">
        and union_id=#{unionId,jdbcType=VARCHAR}
      </if>
    </trim>
  </update>
</mapper>